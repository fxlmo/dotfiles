_HiStOrY_V2_
maplist(add(3),\040[1,2,3],C).
make.
maplist(add(3),\040[1,2,3],C).
make.
maplist(add(3),\040[1,2,3],C).
make.
min([1,2,3])/\040.
min([1,2,3]).
min([1,2,3],C).
insert.
ord_union([1,3,5],[2,4,6],C).
nth0.
nth0(1,1,1).
keysort(['C','B','A']-[3,2,1],C).
make.
child_pair([1,2,3],['A','B','C',\040C).
child_pair([1,2,3],['A','B','C'],\040C).
child_pair([1,2,3],1,\040C).
child_pair(1,1,\040C).
maplist(child_pair,\040[1,2,3],\040['A','B','C']).
maplist(child_pair,\040[1,2,3],\040[4,5,6],\040D).
maplist(child_pair,\040[1,2,3],\040['A',5,6],\040D).
maplist(child_pair,\040[1,2,3],\040[a,5,6],\040D).
maplist(child_pair,\040[1,2,3],\040['a',5,6],\040D).
maplist(child_pair,\040[1,2,3],\040["a",5,6],\040D).
maplist(child_pair,\040[1,2,3],\040[p(1,1),5,6],\040D).
maplist(child_pair,\040[1,2,3],\040['p(1,1)',5,6],\040D).
maplist(child_pair,\040[1,2,3],\040[p(1,1),5,6],\040D).
maplist(child_pair,\040[1,2,3],\040[]p(1,1)],5,6],\040D).
maplist(child_pair,\040[1,2,3],\040[[p(1,1)],5,6],\040D).
maplist(child_pair,\040[[1,2],2,3],\040[4,5,6],\040D).
maplist(child_pair,\040[[1,2],2,3],\040D).
maplist(child_pair,\040[[1,2],2,3],\040[4,5,6],\040D).
make.
maplist(list_pair,\040Lists,\040Pairs0).
maplist(list_pair,\040[[1,2,3],[4,5],\040Pairs0).
maplist(list_pair,\040[[1,2,3],[4,5]],\040Pairs0).
make.
length([1,2,3],L).
maplist(list_pair,\040[[1,2,3],[4,5]],\040Pairs0).
child_pair([1,2,3],1,D).
child_pair(1,[1,2,3],D).
make.
child_pair(1,[1,2,3],D).
make.
child_pair(1,[1,2,3],D).
maplist(child_pair,\040[p(1,1),p(2,1)],[3,2],D).
maplist(child_pair,\040[p(1,1),p(2,1)],[3,2],D),\040keySort,.
make.
maplist(child_pair,\040[p(1,1),p(2,1)],[3,2],D),\040keySort(D,Children).
make.
maplist(child_pair,\040[p(1,1),p(2,1)],[3,2],D),\040keySort(D,Children).
maplist(child_pair,\040[p(1,1),p(2,1)],[3,2],D),\040keysort(D,Children),\040unkey(Children,NC).
maplist(child_pair,\040[p(1,1),p(2,1)],[3,2],D),\040keysort(D,Children),\040maplist(unkey,Children,NC).
make.
start.
make.
shell.
make.
start.
halt.
make.
maplist(kvChildren,[p(1,1):0:5:[],p(1,2):1:4:[p(1,1)],p(1,3):1:6:[p(1,2),p(3,4)]],S).
kvChildren(1:2:3:[4]).
kvChildren(1:2:3:[4],S).
kvChildren(p(1,2):2:3:[4]).
kvChildren(p(1,2):2:3:[4],S).
maplist(kvChildren,[p(1,1):0:5:[],p(1,2):1:4:[p(1,1)],p(1,3):1:6:[p(1,2),p(3,4)]],S).
maplist(kvChildren,[p(1,1):0:5:[]],S).
maplist(kvChildren,[p(1,1):0:5:[1]],S).
make.
maplist(kvChildren,[p(1,1):0:5:[]],S).
make.
maplist(kvChildren,[p(1,1):0:5:[]],S).
maplist(kvChildren,[p(1,1):0:5:[1]],S).
make.
maplist(kvChildren,[p(1,1):0:5:[1]],S).
maplist(kvChildren,[p(1,1):0:5:[]],S).
make.
maplist(kvChildren,[p(1,1):0:5:[],p(1,2):1:4:[p(1,1)],p(1,3):1:6:[p(1,2),p(3,4)]],S).
sort_children([p(1,1):0:5:[],p(1,2):1:4:[p(1,1)],p(1,3):1:6:[p(1,2),p(3,4)]],S).
make.
maplist(kvChildren,[p(1,1):0:5:[],p(1,2):1:4:[p(1,1)],p(1,3):1:6:[p(1,2),p(3,4)]],S).
make.
sort_children([p(1,1):0:5:[],p(1,2):1:4:[p(1,1)],p(1,3):1:6:[p(1,2),p(3,4)]],S).
make.
start.
shell.
make.
shell.
stop.
start.
make.
shell.
make.
shell.
stop.
start.
make.
shell.
